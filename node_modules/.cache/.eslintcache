[{"/home/iassureit/Desktop/Quloi Soft/quloi/src/index.js":"1","/home/iassureit/Desktop/Quloi Soft/quloi/src/reportWebVitals.js":"2","/home/iassureit/Desktop/Quloi Soft/quloi/src/App.js":"3","/home/iassureit/Desktop/Quloi Soft/quloi/src/SysterSecurity/Login.js":"4","/home/iassureit/Desktop/Quloi Soft/quloi/src/Layout/Layout.js":"5","/home/iassureit/Desktop/Quloi Soft/quloi/src/Components/ManageCharges.js":"6","/home/iassureit/Desktop/Quloi Soft/quloi/src/Components/EnhancedTableHead.js":"7"},{"size":500,"mtime":1625941704764,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1625941704764,"results":"10","hashOfConfig":"9"},{"size":279,"mtime":1625982590353,"results":"11","hashOfConfig":"9"},{"size":1294,"mtime":1625955058599,"results":"12","hashOfConfig":"9"},{"size":710,"mtime":1625953686749,"results":"13","hashOfConfig":"9"},{"size":1002,"mtime":1626005710031,"results":"14","hashOfConfig":"9"},{"size":13694,"mtime":1626065449275,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"8onin7",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/home/iassureit/Desktop/Quloi Soft/quloi/src/index.js",[],["32","33"],"/home/iassureit/Desktop/Quloi Soft/quloi/src/reportWebVitals.js",[],"/home/iassureit/Desktop/Quloi Soft/quloi/src/App.js",[],"/home/iassureit/Desktop/Quloi Soft/quloi/src/SysterSecurity/Login.js",[],"/home/iassureit/Desktop/Quloi Soft/quloi/src/Layout/Layout.js",[],"/home/iassureit/Desktop/Quloi Soft/quloi/src/Components/ManageCharges.js",["34","35","36"],"/home/iassureit/Desktop/Quloi Soft/quloi/src/Components/EnhancedTableHead.js",["37","38","39","40","41","42","43","44","45","46"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\n\nfunction createData(description, name, price, unit, tax, exchangeRate, finalPayment) {     \n  return { description, name, price, unit, tax, exchangeRate, finalPayment };\n}\n\nconst rows = [\n  createData('Freight','Freight', 'USD 1781.8','Per container', '-' ,'1.00' , 'INR 2000'),\n  createData('Free In','Free In', 'USD 160','Per container', '-' ,'1.00' , 'INR 2000'),\n  createData('BI Fee','BI Fee', 'TI 175','Per BI', '18%' ,'1.00' , 'INR 2000'),\n  createData('Tempprary','Tempprary Accept', 'USD 140','Per container', '18%' ,'70.79' , 'INR 2000'),\n];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'Description', numeric: false, disablePadding: true, label: 'Description' },\n  { id: 'Name', numeric: true, disablePadding: false, label: 'Name' },\n  { id: 'Price', numeric: true, disablePadding: false, label: 'Price' },\n  { id: 'Unit', numeric: true, disablePadding: false, label: 'Unit' },\n  { id: 'Tax', numeric: true, disablePadding: false, label: 'Tax' },\n  { id: 'Exchange Rate', numeric: true, disablePadding: false, label: 'Exchange Rate' },\n  { id: 'Final Payment', numeric: true, disablePadding: false, label: 'Final Payment' },\n];\n\nconst Role =  window.localStorage.getItem('Role');\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort,loggedInRole } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n        {  Role===\"Admin\" ?\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n            color=\"#379efd\"\n          />\n          :<div></div>\n          }\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function EnhancedTable(props) {\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [loggedInrole, setloggedInrole] = React.useState(props.role);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleGroup = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n\n    console.log(\"setSelected ====>\",newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      {  loggedInrole===\"Admin\" ?\n        <div>\n        <div className=\"title\">Manage Charges</div>\n          <div className=\"btn-container\">                    \n            <Button  aria-describedby={id} variant=\"contained\" color=\"primary\" className=\"btn-grp\" onClick={handleGroup}> Group </Button>\n            <Button variant=\"contained\" className=\"btn-ungrp\">Ungroup</Button>\n            <div className=\"profit-text\">Profit Margin : <span style={{color:\"#379efd\", fontWeight:\"bold\"}}>INR 301.63 (16%)</span></div>\n          </div>\n        </div>\n        : <div></div>\n      }\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                      color=\"primary\"\n                    >                      \n                      <TableCell padding=\"checkbox\">\n                      {  loggedInrole===\"Admin\" ?\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"primary\"\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                        :<div></div>\n                         }\n                      </TableCell>\n                                           \n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.description}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.name}</TableCell>\n                      <TableCell align=\"right\">{row.price}</TableCell>\n                      <TableCell align=\"right\">{row.unit}</TableCell>\n                      <TableCell align=\"right\">{row.tax}</TableCell>\n                      <TableCell align=\"right\">{row.exchangeRate}</TableCell>\n                      <TableCell align=\"right\">{row.finalPayment}</TableCell>\n                    </TableRow>                                        \n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>        \n      </Paper>\n      { loggedInrole===\"Admin\" ?\n        <div className=\"btn-container\">                                        \n          <div className=\"moreCharges-text\"><span style={{color:\"#379efd\", fontWeight:\"bold\"}}><i class=\"fa fa-plus\"></i> More Charges</span></div>\n          <div style={{float:\"right\"}}>\n              <Button variant=\"outlined\" color=\"primary\" href=\"#outlined-buttons\" style={{color:\"#379efd\",marginRight:\"15px\",textTransform:\"capitalize\",height:\"30px\"}}> Cancel</Button>\n              <Button variant=\"contained\" color=\"primary\" className=\"btn-grp\"> Submit </Button>\n          </div>\n        </div>\n        :<div></div>\n      }\n        <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography+ \" \"+\"grupPopUp\"}>\n          <div className=\"grp-data\">\n           This is demo popup\n          </div>\n        </Typography>     \n      </Popover>\n    </div>\n  );\n}",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":3,"column":8,"nodeType":"53","messageId":"54","endLine":3,"endColumn":14},{"ruleId":"51","severity":1,"message":"55","line":5,"column":8,"nodeType":"53","messageId":"54","endLine":5,"endColumn":21},{"ruleId":"51","severity":1,"message":"56","line":6,"column":10,"nodeType":"53","messageId":"54","endLine":6,"endColumn":15},{"ruleId":"51","severity":1,"message":"57","line":10,"column":8,"nodeType":"53","messageId":"54","endLine":10,"endColumn":23},{"ruleId":"51","severity":1,"message":"58","line":19,"column":8,"nodeType":"53","messageId":"54","endLine":19,"endColumn":24},{"ruleId":"51","severity":1,"message":"59","line":20,"column":8,"nodeType":"53","messageId":"54","endLine":20,"endColumn":14},{"ruleId":"51","severity":1,"message":"60","line":76,"column":91,"nodeType":"53","messageId":"54","endLine":76,"endColumn":103},{"ruleId":"51","severity":1,"message":"61","line":229,"column":24,"nodeType":"53","messageId":"54","endLine":229,"endColumn":39},{"ruleId":"51","severity":1,"message":"62","line":281,"column":9,"nodeType":"53","messageId":"54","endLine":281,"endColumn":25},{"ruleId":"51","severity":1,"message":"63","line":285,"column":9,"nodeType":"53","messageId":"54","endLine":285,"endColumn":32},{"ruleId":"51","severity":1,"message":"64","line":290,"column":9,"nodeType":"53","messageId":"54","endLine":290,"endColumn":26},{"ruleId":"51","severity":1,"message":"65","line":295,"column":9,"nodeType":"53","messageId":"54","endLine":295,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":396,"column":55,"nodeType":"68","messageId":"69","endLine":396,"endColumn":56},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'MaterialTable' is defined but never used.","'Table' is defined but never used.","'TablePagination' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'loggedInRole' is assigned a value but never used.","'setloggedInrole' is assigned a value but never used.","'handleChangePage' is assigned a value but never used.","'handleChangeRowsPerPage' is assigned a value but never used.","'handleChangeDense' is assigned a value but never used.","'emptyRows' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]